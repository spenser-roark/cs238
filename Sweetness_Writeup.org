
* Sweetness

** Introduction
The purpose of this assignment was to find the "sweetest" c value for the 
Euler function for finding probable primes. x^2 +x + c But what constitutes sweetness?
Is it the number of primes found? Or the distribution of primes over the range?
Or could it be the chances that a given value from the Euler function is actually prime?

** My Sweetest Choice
After some consideration I decided that the sweetness of prime was dependant
upon what you needed. There are times that what you need is as many 
prime like numbers as possible within a given range. Other times you 
need to be certain that the number you are given is, in fact, prime.
For my purposes I choose to consider the sweetest value to be the one
that gave me the the highest odds of a value actually being prime.
Sweetness = right_answers / total_answers

Of course it is not possible to try and check every prime in existence.
This is because it is very difficult to find primes in the first place and
computers have limited resources. So I choose to only check for values 
within the range of 0-10000. Values that are returned from the Euler
function are compared to values found on a table of primes that was
generated using the Sieve of Eratosthenes.

** My Results
#+BEGIN_SRC emacs-lisp
(progn
	(load "~/git/cs238/exploration1.lsp")
	(main 10000)
)
#+END_SRC

As you can see, using the criteria defined above, the sweetest value is 
the number 58 with a probability of 41% to give you a correct prime. 

